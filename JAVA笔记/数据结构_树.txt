
数据结构
常用的数据结构有：数组，栈，链表，队列，树，图，堆，散列表等
每一种数据结构都有着独特的数据存储方式

B树、B+树、红黑二叉树


树通常结合了有序数组和链表两种数据结构的优点，在树中查找数 据项的速度和在有序数组中查找一样快，并且插入数据项和删除数 据项的速度也和链表一样


树的主要类型 N元树 平衡树 二叉树 二叉搜索树 AVL树 红黑树 2-3树（多叉树比二叉树有更多的关键字和子节点）。

其中，二叉树和二叉搜索树是常用的树。二叉树指树中每个节点 多只能有两个子节点，二叉搜索树指一个节点的左子节点的关键 字值小于这个节点，右子节点的关键字的值大于或等于这个父节 点。 

为什要学数据结构？
你也可以不学数据结构，直接学JAVA，这种编程语言将大多数数据结构都封装成类了，你会用就可以；但是你会发现没有数据结构的支持，你很快就遇到了无法逾越的高山，只能当个程序录入员。


1、B树
B树大量应用在数据库和文件系统当中。
它的设计思想是，将相关数据尽量集中在一起，以便一次读取多个数据，减少硬盘操作次数。B树算法减少定位记录时所经历的中间过程，从而加快存取速度。

假定一个节点可以容纳100个值，那么3层的B树可以容纳100万个数据，如果换成二叉查找树，则需要20层！假定操作系统一次读取一个节点，并且根节点保留在内存中，那么B树在100万个数据中查找目标值，只需要读取两次硬盘。

如mongoDB数据库使用，单次查询平均快于Mysql（但侧面来看Mysql至少平均查询耗时差不多）


2、B+树
mysql使用B+树作为索引：

B+树相对B树的优点：

①B+树的所有Data域在叶子节点，一般来说都会进行一个优化，就是将所有的叶子节点用指针串联起来，遍历叶子节点就能获取全部数据，这样就能进行区间访问了。

②IO一次读数据是从磁盘上读的，磁盘容量是固定的，取数据量大小是固定的，非叶子节点不存储数据，节点小，磁盘IO次数就少。

3、红黑树
红黑树往往出现由于树的深度过大而造成磁盘IO读写过于频繁，进而导致效率低下的情况在数据较小，可以完全放到内存中时，红黑树的时间复杂度比B树低。
如linux中进程的调度用的是红黑树。
反之，数据量较大，外存中占主要部分时，B树因其读磁盘次数少，而具有更快的速度。